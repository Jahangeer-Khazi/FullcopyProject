@isTest
global class TestClassMockResponse implements HttpCalloutMock {
    // Implement this interface method
    global HTTPResponse respond(HTTPRequest req) {
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody('{"Methods": [{"IsStatic": true, "AccessModifier": "public", "ReturnType": "String", "Name": "getLoggedInUserTimeZone", "Params": []}, {"IsStatic": true, "AccessModifier": "static", "ReturnType": "String", "Name": "testApexMethodIntegerPrm", "Params": [{"Type": "Integer", "Name": "int_input"}, {"Type": "String", "Name": "str_input"}, {"Type": "Date", "Name": "date_input"}, {"Type": "DateTime", "Name": "dateTime_input"}, {"Type": "List<customObj__c>", "Name": "cstmLst"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<Account>", "Name": "getAllAccounts", "Params": [{"Type": "String", "Name": "searchText"}, {"Type": "String", "Name": "selectedType"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<CustomSelectOption>", "Name": "getGrades", "Params": []}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<Lead>", "Name": "getAllLead", "Params": [{"Type": "String", "Name": "searchText"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<User>", "Name": "getUsersFromDb", "Params": []}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<RESurvey__c>", "Name": "getAllSurveys", "Params": []}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<Visits__c>", "Name": "getEvents", "Params": [{"Type": "String", "Name": "selectedUser"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "List<Visits__c>", "Name": "getEventsForLoggedInUser", "Params": []}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "Visits__c", "Name": "getNewEvent", "Params": []}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "Visits__c<VisitTask__c>", "Name": "saveNewEventWithSurveys", "Params": [{"Type": "String", "Name": "ownerId"}, {"Type": "String", "Name": "subject"}, {"Type": "String", "Name": "startDateTime"}, {"Type": "String", "Name": "endDateTime"}, {"Type": "String", "Name": "accountId"}, {"Type": "String", "Name": "selectedSurveys"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "Visits__c", "Name": "saveNewEvent", "Params": [{"Type": "String", "Name": "ownerId"}, {"Type": "String", "Name": "accountId"}, {"Type": "String", "Name": "subject"}, {"Type": "String", "Name": "startDateTime"}, {"Type": "String", "Name": "endDateTime"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "Visits__c", "Name": "updateEvent", "Params": [{"Type": "String", "Name": "eventId"}, {"Type": "String", "Name": "startDateTime"}, {"Type": "String", "Name": "endDateTime"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "Visits__c<VisitTask__c>", "Name": "updateOlderEvent", "Params": [{"Type": "String", "Name": "eventId"}, {"Type": "String", "Name": "subject"}, {"Type": "String", "Name": "startDateTime"}, {"Type": "String", "Name": "endDateTime"}, {"Type": "String", "Name": "selectedSurveys"}, {"Type": "String", "Name": "allEvents"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "void", "Name": "deleteEvent", "Params": [{"Type": "String", "Name": "eventId"}]}, {"IsStatic": true, "AccessModifier": "public", "ReturnType": "void", "Name": "unsuppEx", "Params": [{"Type": "Contact", "Name": "con"}, {"Type": "List<Account>", "Name": "accLst"}, {"Type": "List<String>", "Name": "nameLst"}, {"Type": "List<Date>", "Name": "dateLst"}]}]}');
        res.setStatusCode(200);
        return res;
    }
}